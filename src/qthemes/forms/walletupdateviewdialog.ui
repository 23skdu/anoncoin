<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>WalletUpdateViewDialog</class>
 <widget class="QDialog" name="WalletUpdateViewDialog">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>400</width>
    <height>300</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Dialog</string>
  </property>
  <layout class="QGridLayout" name="gridLayout">
   <item row="0" column="0">
    <widget class="QLabel" name="label">
     <property name="text">
      <string>Welcome to Anoncoin QT</string>
     </property>
    </widget>
   </item>
   <item row="0" column="1" rowspan="2">
    <widget class="QDialogButtonBox" name="buttonBox">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <property name="standardButtons">
      <set>QDialogButtonBox::Ok</set>
     </property>
    </widget>
   </item>
   <item row="1" column="0">
    <widget class="QLabel" name="label_2">
     <property name="text">
      <string>Update a Wallet file and View</string>
     </property>
    </widget>
   </item>
   <item row="2" column="0" colspan="2">
    <widget class="QTextBrowser" name="textBrowser">
     <property name="sizePolicy">
      <sizepolicy hsizetype="MinimumExpanding" vsizetype="MinimumExpanding">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="html">
      <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
p, li { white-space: pre-wrap; }
&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Cantarell'; font-size:11pt; font-weight:400; font-style:normal;&quot;&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt;&quot;&gt;To be clear, in these early stages of development of a Multi-Wallet QT application for Anoncoin, it must work with a Core that is operating live and using only one wallet file.  Only one Wallet View can be allowed to operate that way, and we are calling it ~default.  It is read-writable, synced with the blockchain and accepting inbound and offering outbound transactions and messages in realtime live at all times.  All other views are read-only and will not be current with the latest blocks in the chain.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt;&quot;&gt;This command will be the first time an alternative Wallet is opened in read-write mode, updated and saved with its associated view refreshed to current blockchain information.  When this is executed the Wallet selected must NOT be ~default, and a mandatory backup should be made of the original file.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt;&quot;&gt;The wallet data file will have already been opened once, unencrypted(if necessary) and loaded into memory and shown to the user as a Wallet View.  In order to modify it, the first step required maybe that it is upgraded, or if it has corruption an attempt made to repair it, zapping the transactions or simply trying to recover the private keys could also be options.  Once those first steps are completed it can finally be made current by rescanning the blockchain to confirm and update all transactions which are relative to this wallet, that could take several minutes or longer to complete, so a progress bar should be shown as to how far it is along in completing that task, as well as offering the user an option to abort.&lt;/span&gt;&lt;/p&gt;
&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;span style=&quot; font-size:10pt;&quot;&gt;At this point, assuming it has completed a rescan, we now have a new Wallet built which can be saved to disk and its View updated with the latest information.  Initial implementation of this command will require that once again the data file and veiw are returned to a read-only state.  If desired the user could then execute the next step.  Restart the Core with this wallet in use as primary.  The new ~default...&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections>
  <connection>
   <sender>buttonBox</sender>
   <signal>accepted()</signal>
   <receiver>WalletUpdateViewDialog</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>248</x>
     <y>254</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>buttonBox</sender>
   <signal>rejected()</signal>
   <receiver>WalletUpdateViewDialog</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>316</x>
     <y>260</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
