From: Kill Your TV <killyourtv@i2pmail.org>
Date: Sat, 8 Mar 2014 00:02:54 +0000
Subject: unbundle-leveldb


Patch borrowed from the Debian litecoin packaging and rebased to apply to the
anoncoin codebase by kytv.

Original header info follows:

Last-Update: 2013-11-14
Forwarded: not-needed
Author: Dmitry Smirnov <onlyjob@member.fsf.org>
Description: use system libleveldb-dev instead of a bundled one.

---
 anoncoin-qt.pro   | 20 +-------------------
 src/leveldb.cpp   |  2 +-
 src/makefile.unix |  8 +-------
 3 files changed, 3 insertions(+), 27 deletions(-)

--- a/anoncoin-qt.pro
+++ b/anoncoin-qt.pro
@@ -102,25 +102,7 @@
     QTPLUGIN += qcncodecs qjpcodecs qtwcodecs qkrcodecs qtaccessiblewidgets
 }
 
-INCLUDEPATH += src/leveldb/include src/leveldb/helpers
-LIBS += $$PWD/src/leveldb/libleveldb.a $$PWD/src/leveldb/libmemenv.a
-!win32 {
-    # we use QMAKE_CXXFLAGS_RELEASE even without RELEASE=1 because we use RELEASE to indicate linking preferences not -O preferences
-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX $(MAKE) OPT=\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\" libleveldb.a libmemenv.a
-} else {
-    # make an educated guess about what the ranlib command is called
-    isEmpty(QMAKE_RANLIB) {
-        QMAKE_RANLIB = $$replace(QMAKE_STRIP, strip, ranlib)
-    }
-    LIBS += -lshlwapi
-    genleveldb.commands = cd $$PWD/src/leveldb && CC=$$QMAKE_CC CXX=$$QMAKE_CXX TARGET_OS=OS_WINDOWS_CROSSCOMPILE $(MAKE) OPT=\"$$QMAKE_CXXFLAGS $$QMAKE_CXXFLAGS_RELEASE\" libleveldb.a libmemenv.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libleveldb.a && $$QMAKE_RANLIB $$PWD/src/leveldb/libmemenv.a
-}
-genleveldb.target = $$PWD/src/leveldb/libleveldb.a
-genleveldb.depends = FORCE
-PRE_TARGETDEPS += $$PWD/src/leveldb/libleveldb.a
-QMAKE_EXTRA_TARGETS += genleveldb
-# Gross ugly hack that depends on qmake internals, unfortunately there is no other way to do it.
-QMAKE_CLEAN += $$PWD/src/leveldb/libleveldb.a; cd $$PWD/src/leveldb ; $(MAKE) clean
+LIBS += -lleveldb -lmemenv
 
 # regenerate src/build.h
 !win32|contains(USE_BUILD_INFO, 1) {
--- a/src/leveldb.cpp
+++ b/src/leveldb.cpp
@@ -8,7 +8,7 @@
 #include <leveldb/env.h>
 #include <leveldb/cache.h>
 #include <leveldb/filter_policy.h>
-#include <memenv/memenv.h>
+#include <leveldb/helpers/memenv.h>
 
 #include <boost/filesystem.hpp>
 
--- a/src/makefile.unix
+++ b/src/makefile.unix
@@ -113,7 +113,6 @@
 # anoncoind depends on them. This is inelegant because they are redundant when listed
 # in $OBJS (NOTE: compilation fails if they are not in $LIBS, even if present here).
 OBJS= \
-    leveldb/libleveldb.a \
     ../i2psam/libi2psam.a \
     obj/alert.o \
     obj/version.o \
@@ -165,11 +164,7 @@
 # LevelDB support
 #
 MAKEOVERRIDES =
-LIBS += $(CURDIR)/leveldb/libleveldb.a $(CURDIR)/leveldb/libmemenv.a
-DEFS += $(addprefix -I,$(CURDIR)/leveldb/include)
-DEFS += $(addprefix -I,$(CURDIR)/leveldb/helpers)
-leveldb/libleveldb.a:
-	@echo "Building LevelDB ..." && cd leveldb && $(MAKE) CC=$(CC) CXX=$(CXX) OPT="$(xCXXFLAGS)" libleveldb.a libmemenv.a && cd ..
+LIBS += -lleveldb -lmemenv
 
 #
 # I2P support
@@ -225,6 +220,5 @@
 	-rm -f obj/*.P
 	-rm -f obj-test/*.P
 	-rm -f obj/build.h
-	-cd leveldb && $(MAKE) clean || true
 
 FORCE:
